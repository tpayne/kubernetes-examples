<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>webk8.example</groupId>
  <artifactId>web8k-example</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>web8k-example Maven Webapp</name>
  <url>http://maven.apache.org</url>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.3.4</version>
  </parent>

  <properties>
    <jkube.version>1.1.1</jkube.version>
    <java.level>8</java.level>
    <!-- Specify this is you want to hardcode a container registry, e.g. azurecr.azurecr.io
      <jkube.docker.registry>azurecr.azurecr.io</jkube.docker.registry>
    -->
    <azure.resourceGroup>test</azure.resourceGroup>
    <azure.region>westeurope</azure.region>
    <azure.appName>${project.artifactId}</azure.appName>
  </properties>

  <licenses>
    <license>
      <name>The MIT license</name>
      <url>https://opensource.org/licenses/MIT</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>tim.tpayne@gmail.com</id>
      <name>Tim Payne</name>
      <organization>HCL Infra, DRYICE</organization>
    </developer>
  </developers>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.10.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>  
  </dependencies>

  <build>
    <sourceDirectory>src</sourceDirectory>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.2</version>
      </plugin>

      <plugin>
        <groupId>org.eclipse.jkube</groupId>
        <artifactId>kubernetes-maven-plugin</artifactId>
        <version>1.15.0</version>
          <!-- Specify this is you want to make the k8 targets default into your lifecycle flow
          <executions>
            <execution>
              <id>default</id>
              <goals>
                <goal>build</goal>
                <goal>resource</goal>
                <goal>apply</goal>
              </goals>
            </execution>
          </executions>
          -->
      </plugin>
      <plugin>
        <groupId>org.eclipse.jkube</groupId>
        <artifactId>openshift-maven-plugin</artifactId>
        <version>1.15.0</version>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>        
          <configuration>
            <mainClass>application.Webk8App</mainClass>
          </configuration>    
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.microsoft.azure</groupId>
          <artifactId>azure-webapp-maven-plugin</artifactId>
          <version>2.12.0</version>
          <configuration>
            <schemaVersion>V2</schemaVersion>
            <resourceGroup>${azure.resourceGroup}</resourceGroup>
            <appName>${azure.appName}</appName>
            <region>${azure.region}</region>
            <pricingTier>P1V2</pricingTier>
            <runtime>
              <os>linux</os>
              <javaVersion>jre8</javaVersion>
              <webContainer>jre8</webContainer>
            </runtime>
            <!-- Begin of App Settings 
            <appSettings>
              <property>
                <name>JAVA_OPTS</name>
                <value>-Dserver.port=80</value>
              </property>
            </appSettings>
            -->
            <deployment>
              <resources>
                <resource>
                  <directory>${project.basedir}/target</directory>
                  <includes>
                    <include>*.jar</include>
                  </includes>
                </resource>
              </resources>
            </deployment>
          </configuration>
        </plugin>
    </plugins>    
  </build>
</project>
