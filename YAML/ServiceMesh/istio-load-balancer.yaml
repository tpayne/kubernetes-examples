---
# Lets first create an application namespace to use...
apiVersion: v1
kind: Namespace
metadata:
  name: logicapp-dev
  labels:
    istio-injection: enabled
---
---
# Now let's create a deployment in that namespace...
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: logicapp-dev
  name: logicapp-dev-deployment-nginx
spec:
  selector:
    matchLabels:
      app: logicapp-dev-nginx
  template:
    metadata:
      labels:
        app: logicapp-dev-nginx # the label for the pods and the deployments
        # This annotation causes Envoy to serve cluster.outbound statistics via 15000/stats
        # in addition to the stats normally served by Istio.  The Circuit Breaking example task
        # gives an example of inspecting Envoy stats.
      annotations:
        sidecar.istio.io/statsInclusionPrefixes: cluster.outbound,cluster_manager,listener_manager,http_mixer_filter,tcp_mixer_filter,server,cluster.xds-grpc
    spec:
      containers:
      - name: nginx
        image: nginx:stable
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80 # the application listens to this port
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: logicapp-dev
  name: logicapp-dev-deployment-jenkins
spec:
  selector:
    matchLabels:
      app: logicapp-dev-jenkins
  template:
    metadata:
      labels:
        app: logicapp-dev-jenkins # the label for the pods and the deployments
        # This annotation causes Envoy to serve cluster.outbound statistics via 15000/stats
        # in addition to the stats normally served by Istio.  The Circuit Breaking example task
        # gives an example of inspecting Envoy stats.
      annotations:
        sidecar.istio.io/statsInclusionPrefixes: cluster.outbound,cluster_manager,listener_manager,http_mixer_filter,tcp_mixer_filter,server,cluster.xds-grpc
    spec:
      containers:
      # To get the password for Jenkins do the following...
      # - kubectl get pods -n logicapp-dev (find the jenkins one)
      # - kubectl logs <podId> -n logicapp-dev
      - name: jenkins
        image: jenkins/jenkins:lts
        imagePullPolicy: Always
        ports:
        - containerPort: 8080 # the application listens to this port
        # For a real installation - these may need tuning better...
        # resources:
        #   requests: # minimum resources required
        #     cpu: 150m
        #     memory: 250Mi
        #   limits: # maximum resources allocated
        #     cpu: 300m
        #     memory: 500Mi
        env:
        - name: JENKINS_OPTS
          value: --prefix=/svrjenkins        
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
      volumes:
      - name: jenkins-home
        emptyDir: {}
---
---
# Create a service for the deployment
apiVersion: v1
kind: Service
metadata:
  namespace: logicapp-dev
  name: logicapp-dev-service-nginx
spec:
  selector:
    app: logicapp-dev-nginx
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  namespace: logicapp-dev
  name: logicapp-dev-service-jenkins
spec:
  selector:
    app: logicapp-dev-jenkins
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
  type: ClusterIP
---
# Create gateway...
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ingress-gateway
  namespace: logicapp-dev
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http-default
      protocol: HTTP
    hosts:
    - "*"  
  - port:
      number: 8080
      name: http-secondary
      protocol: HTTP    
    hosts:
    - "*"
---
# Create ingress rules to access them...
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: logicapp-dev-ingress-nginx
  namespace: logicapp-dev
spec:
  hosts:
  - "*"
  gateways:
  - ingress-gateway
  http:
  - name: "logicapp-dev-ingress-nginx-http"
    match:
    - uri:
        prefix: /svrnginx
    rewrite:
      uri: "/"    
    route:
    - destination:
        host: logicapp-dev-service-nginx
        port:
          number: 80
---
# Create ingress rules to access them...
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: logicapp-dev-ingress-jenkins
  namespace: logicapp-dev
spec:
  hosts:
  - "*"
  gateways:
  - ingress-gateway
  http:  
  - name: "logicapp-dev-ingress-jenkins-http"
    match:
    - uri:
        prefix: /svrjenkins
    rewrite:
      uri: "/svrjenkins"    
    route:
    - destination:
        host: logicapp-dev-service-jenkins
        port:
          number: 8080
---
# Put in a circuit breaker to help smooth throughput...
# https://istio.io/latest/docs/reference/config/networking/destination-rule/
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: logicapp-dev-cb-nginx
  namespace: logicapp-dev
spec:
  host: logicapp-dev-service-nginx
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 50 # Support 50 concurrent connections...
        connectTimeout: 30ms
        tcpKeepalive:
          time: 100s
          interval: 10s
      http:
        http1MaxPendingRequests: 50
        maxRequestsPerConnection: 10
    outlierDetection: 
      # Check every 15 mins for connections that fail 10 times between checks
      # If detected, then ban them for 10mins
      consecutive5xxErrors: 10
      interval: 15m
      baseEjectionTime: 10m
      maxEjectionPercent: 100
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: logicapp-dev-cb-jenkins
  namespace: logicapp-dev
spec:
  host: logicapp-dev-service-jenkins
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 50 # Support 50 concurrent connections...
        connectTimeout: 30ms
        tcpKeepalive:
          time: 100s
          interval: 10s
      http:
        http1MaxPendingRequests: 50
        maxRequestsPerConnection: 10
    outlierDetection:
      # Check every 15 mins for connections that fail 10 times between checks
      # If detected, then ban them for 10mins
      consecutive5xxErrors: 10
      interval: 15m
      baseEjectionTime: 10m
      maxEjectionPercent: 100