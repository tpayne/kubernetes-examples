name: GitHub CR Build and Push

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # github.repository as <account>/<repo>

jobs:
  build:
    name: Build and push Docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract image tags and labels - tester image
        uses: docker/metadata-action@v5
        id: metatst
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/test-runtime-environment

      - name: Build and Push testenv image
        uses: docker/build-push-action@v6
        with:
          context: docker-files/
          file: docker-files/test-runtime-env.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/test-runtime-environment:latest
          labels: ${{ steps.metatst.outputs.labels }}

      - name: Extract image tags and labels - terraform and k8s
        uses: docker/metadata-action@v5
        id: metatf
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/terraform-kubectl-env

      - name: Build and Push terraform and k8s Docker image
        uses: docker/build-push-action@v6
        with:
          context: docker-files/
          file: docker-files/terraform-kubectl-env.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/terraform-kubectl-env:latest
          labels: ${{ steps.metatf.outputs.labels }}

      - name: Extract image tags and labels - cd-promote
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/cd-promote

      - name: Build and Push CD Promote Docker image
        uses: docker/build-push-action@v6
        with:
          context: docker-files/
          file: docker-files/cd-promote.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/cd-promote:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Extract image tags and labels - argo-env
        uses: docker/metadata-action@v5
        id: metad
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/argo-env

      - name: Build and Push Argo Environment Docker image
        uses: docker/build-push-action@v6
        with:
          context: docker-files/
          file: docker-files/argo-env.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/argo-env:latest
          labels: ${{ steps.metad.outputs.labels }}

      - name: Extract image tags and labels - argo-env-github
        uses: docker/metadata-action@v5
        id: metae
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/argo-env-github

      - name: Build and Push GitHub Argo Environment Docker image
        uses: docker/build-push-action@v6
        with:
          context: docker-files/
          file: docker-files/argo-env-github.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/argo-env-github:latest
          labels: ${{ steps.metae.outputs.labels }}

      - name: Extract image tags and labels - pgclient15
        uses: docker/metadata-action@v5
        id: metaf
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/pgclient15
  
      - name: Build and Push GitHub PGClient15 Environment Docker image
        uses: docker/build-push-action@v6
        with:
          context: docker-files/
          file: docker-files/pgclient.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/pgclient15:latest
          labels: ${{ steps.metae.outputs.labels }}