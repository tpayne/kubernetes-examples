apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{ .Values.namespaces.benamespace }}
  name: {{ include "database-deployment.fullname" . }}-dbdeploy
  labels:
    {{- include "database-deployment.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "database-deployment.fullname" . }}-dbsvr
  selector:
    matchLabels:
      {{- include "database-deployment.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "database-deployment.selectorLabels" . | nindent 8 }}
        app: {{ include "database-deployment.fullname" . }}-dbcontainer
        env: prod
    spec:
      containers:
      - name: {{ include "database-deployment.fullname" . }}-dbcontainer
        image: {{ .Values.image.repository }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.dbport }}
        envFrom:
          - configMapRef:
              name: {{ include "database-deployment.fullname" . }}-dbconfig
        volumeMounts:
          - name: {{ include "database-deployment.fullname" . }}-dbstorage
            mountPath: /var/lib/postgresql
        resources: # These will need much better tuning...
          {{- toYaml .Values.backend.dbServerResources | nindent 12 }}
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        name: {{ include "database-deployment.fullname" . }}-dbstorage
      spec:
        storageClassName: localstorage
        accessModes: ["ReadWriteMany"]
        resources:
         requests:
          storage: 5Gi
        selector:
         matchLabels:
          type: local